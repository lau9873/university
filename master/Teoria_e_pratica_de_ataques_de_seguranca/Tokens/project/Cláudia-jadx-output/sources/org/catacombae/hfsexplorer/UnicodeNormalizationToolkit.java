package org.catacombae.hfsexplorer;

import java.util.Collection;
import java.util.HashMap;
import java.util.Hashtable;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Map;
/* JADX WARN: Classes with same name are omitted:
  hfsexplorer-0_21-src.zip:dist/lib/hfsx.jar:org/catacombae/hfsexplorer/UnicodeNormalizationToolkit.class
 */
/* loaded from: hfsx.jar:org/catacombae/hfsexplorer/UnicodeNormalizationToolkit.class */
public class UnicodeNormalizationToolkit {
    private Map<Character, char[]> decompositionTable;
    private TrieNode compositionTrie;
    private static final UnicodeNormalizationToolkit defaultInstance = new UnicodeNormalizationToolkit();
    private static long nextID = 0;

    static /* synthetic */ long access$008() {
        long j = nextID;
        nextID = j + 1;
        return j;
    }

    /* JADX WARN: Classes with same name are omitted:
      hfsexplorer-0_21-src.zip:dist/lib/hfsx.jar:org/catacombae/hfsexplorer/UnicodeNormalizationToolkit$HangulDecomposition.class
     */
    /* loaded from: hfsx.jar:org/catacombae/hfsexplorer/UnicodeNormalizationToolkit$HangulDecomposition.class */
    private static class HangulDecomposition {
        static final int SBase = 44032;
        static final int LBase = 4352;
        static final int VBase = 4449;
        static final int TBase = 4519;
        static final int LCount = 19;
        static final int VCount = 21;
        static final int TCount = 28;
        static final int NCount = 588;
        static final int SCount = 11172;

        private HangulDecomposition() {
        }

        public static String decomposeHangul(char s) {
            int SIndex = s - 44032;
            if (SIndex < 0 || SIndex >= 11172) {
                return String.valueOf(s);
            }
            StringBuffer result = new StringBuffer();
            int L = 4352 + (SIndex / 588);
            int V = 4449 + ((SIndex % 588) / 28);
            int T = 4519 + (SIndex % 28);
            result.append((char) L);
            result.append((char) V);
            if (T != 4519) {
                result.append((char) T);
            }
            return result.toString();
        }

        public static String composeHangul(String source) {
            int TIndex;
            int VIndex;
            int len = source.length();
            if (len == 0) {
                return "";
            }
            StringBuffer result = new StringBuffer();
            char last = source.charAt(0);
            result.append(last);
            for (int i2 = 1; i2 < len; i2++) {
                char ch = source.charAt(i2);
                int LIndex = last - 4352;
                if (0 <= LIndex && LIndex < 19 && 0 <= (VIndex = ch - 4449) && VIndex < 21) {
                    last = (char) (44032 + (((LIndex * 21) + VIndex) * 28));
                    result.setCharAt(result.length() - 1, last);
                } else {
                    int SIndex = last - 44032;
                    if (0 <= SIndex && SIndex < 11172 && SIndex % 28 == 0 && 0 < (TIndex = ch - 4519) && TIndex < 28) {
                        last = (char) (last + TIndex);
                        result.setCharAt(result.length() - 1, last);
                    } else {
                        last = ch;
                        result.append(ch);
                    }
                }
            }
            return result.toString();
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* JADX WARN: Classes with same name are omitted:
      hfsexplorer-0_21-src.zip:dist/lib/hfsx.jar:org/catacombae/hfsexplorer/UnicodeNormalizationToolkit$TrieNode.class
     */
    /* loaded from: hfsx.jar:org/catacombae/hfsexplorer/UnicodeNormalizationToolkit$TrieNode.class */
    public static class TrieNode {
        private char trig;
        private final Hashtable<Character, TrieNode> childNodes = new Hashtable<>();
        private char[] replacementSequence = null;
        private long id = UnicodeNormalizationToolkit.access$008();

        public TrieNode(char trig) {
            this.trig = trig;
        }

        public void addChild(char nextChar, TrieNode childNode) {
            this.childNodes.put(Character.valueOf(nextChar), childNode);
        }

        public TrieNode getChild(char nextChar) {
            return this.childNodes.get(Character.valueOf(nextChar));
        }

        public Collection<TrieNode> getChildren() {
            return this.childNodes.values();
        }

        public void setReplacementSequence(char[] seq) {
            this.replacementSequence = seq;
        }

        public char[] getReplacementSequence() {
            return this.replacementSequence;
        }

        public String toString() {
            return "{" + this.id + "} 0x" + Util.toHexStringBE(this.trig) + (this.replacementSequence == null ? "" : " -> 0x" + Util.toHexStringBE(this.replacementSequence));
        }
    }

    private UnicodeNormalizationToolkit() {
        this(new HashMap());
    }

    private UnicodeNormalizationToolkit(Map<Character, char[]> decompositionTable) {
        this.decompositionTable = decompositionTable;
        buildDecompositionTable(decompositionTable);
        this.compositionTrie = buildCompositionTrie(decompositionTable);
    }

    public static UnicodeNormalizationToolkit getDefaultInstance() {
        return defaultInstance;
    }

    public static UnicodeNormalizationToolkit getCustomInstance(Map<Character, char[]> decompositionTable) {
        return new UnicodeNormalizationToolkit(decompositionTable);
    }

    public char[] decompose(char c2) {
        int codepoint = c2 & 65535;
        if (codepoint >= 44032 && codepoint <= 55203) {
            return HangulDecomposition.decomposeHangul(c2).toCharArray();
        }
        char[] subst = this.decompositionTable.get(Character.valueOf(c2));
        if (subst == null) {
            subst = new char[]{c2};
        }
        char[] res = new char[subst.length];
        for (int i2 = 0; i2 < subst.length; i2++) {
            res[i2] = subst[i2];
        }
        return res;
    }

    public String compose(String decomposedString) {
        StringBuilder sb = new StringBuilder();
        LinkedList<TrieNode> matchSequence = new LinkedList<>();
        int i2 = 0;
        while (i2 < decomposedString.length()) {
            char[] replacementSequence = null;
            matchSequence.clear();
            TrieNode tn = this.compositionTrie;
            int charsRead = 0;
            while (tn != null && i2 + charsRead < decomposedString.length()) {
                char current = decomposedString.charAt(i2 + charsRead);
                tn = tn.getChild(current);
                if (tn != null) {
                    matchSequence.addFirst(tn);
                    charsRead++;
                }
            }
            Iterator i$ = matchSequence.iterator();
            while (true) {
                if (!i$.hasNext()) {
                    break;
                }
                TrieNode cur = i$.next();
                if (cur.getReplacementSequence() != null) {
                    replacementSequence = cur.getReplacementSequence();
                    break;
                }
                charsRead--;
            }
            if (replacementSequence != null) {
                sb.append(replacementSequence);
                i2 += charsRead - 1;
            } else {
                sb.append(decomposedString.charAt(i2));
            }
            i2++;
        }
        return HangulDecomposition.composeHangul(sb.toString());
    }

    public Map<Character, char[]> getDecompositionTable() {
        return this.decompositionTable;
    }

    private void checkTrie(TrieNode root) {
        checkTrie(root, "  ");
    }

    private void checkTrie(TrieNode root, String prefix) {
        Collection<TrieNode> children = root.getChildren();
        if (root.getReplacementSequence() != null) {
            System.err.print(prefix + root.toString());
            if (children.size() > 0) {
                System.err.println(" <INCONSISTENCY!>");
            } else {
                System.err.println();
            }
        } else {
            System.err.println(prefix + root.toString());
        }
        for (TrieNode tn : children) {
            checkTrie(tn, prefix + "  ");
        }
    }

    private static TrieNode buildCompositionTrie(Map<Character, char[]> decompositionTable) {
        TrieNode rootNode = new TrieNode((char) 0);
        for (Map.Entry<Character, char[]> entry : decompositionTable.entrySet()) {
            char key = entry.getKey().charValue();
            char[] value = entry.getValue();
            TrieNode currentNode = rootNode;
            for (char c2 : value) {
                TrieNode nextNode = currentNode.getChild(c2);
                if (nextNode == null) {
                    nextNode = new TrieNode(c2);
                    currentNode.addChild(c2, nextNode);
                }
                currentNode = nextNode;
            }
            currentNode.setReplacementSequence(new char[]{key});
        }
        return rootNode;
    }

    private static void buildDecompositionTable(Map<Character, char[]> decompositionTable) {
        char[] subst = {'A', 768};
        decompositionTable.put((char) 192, subst);
        char[] subst2 = {'A', 769};
        decompositionTable.put((char) 193, subst2);
        char[] subst3 = {'A', 770};
        decompositionTable.put((char) 194, subst3);
        char[] subst4 = {'A', 771};
        decompositionTable.put((char) 195, subst4);
        char[] subst5 = {'A', 776};
        decompositionTable.put((char) 196, subst5);
        char[] subst6 = {'A', 778};
        decompositionTable.put((char) 197, subst6);
        char[] subst7 = {'C', 807};
        decompositionTable.put((char) 199, subst7);
        char[] subst8 = {'E', 768};
        decompositionTable.put((char) 200, subst8);
        char[] subst9 = {'E', 769};
        decompositionTable.put((char) 201, subst9);
        char[] subst10 = {'E', 770};
        decompositionTable.put((char) 202, subst10);
        char[] subst11 = {'E', 776};
        decompositionTable.put((char) 203, subst11);
        char[] subst12 = {'I', 768};
        decompositionTable.put((char) 204, subst12);
        char[] subst13 = {'I', 769};
        decompositionTable.put((char) 205, subst13);
        char[] subst14 = {'I', 770};
        decompositionTable.put((char) 206, subst14);
        char[] subst15 = {'I', 776};
        decompositionTable.put((char) 207, subst15);
        char[] subst16 = {'N', 771};
        decompositionTable.put((char) 209, subst16);
        char[] subst17 = {'O', 768};
        decompositionTable.put((char) 210, subst17);
        char[] subst18 = {'O', 769};
        decompositionTable.put((char) 211, subst18);
        char[] subst19 = {'O', 770};
        decompositionTable.put((char) 212, subst19);
        char[] subst20 = {'O', 771};
        decompositionTable.put((char) 213, subst20);
        char[] subst21 = {'O', 776};
        decompositionTable.put((char) 214, subst21);
        char[] subst22 = {'U', 768};
        decompositionTable.put((char) 217, subst22);
        char[] subst23 = {'U', 769};
        decompositionTable.put((char) 218, subst23);
        char[] subst24 = {'U', 770};
        decompositionTable.put((char) 219, subst24);
        char[] subst25 = {'U', 776};
        decompositionTable.put((char) 220, subst25);
        char[] subst26 = {'Y', 769};
        decompositionTable.put((char) 221, subst26);
        char[] subst27 = {'a', 768};
        decompositionTable.put((char) 224, subst27);
        char[] subst28 = {'a', 769};
        decompositionTable.put((char) 225, subst28);
        char[] subst29 = {'a', 770};
        decompositionTable.put((char) 226, subst29);
        char[] subst30 = {'a', 771};
        decompositionTable.put((char) 227, subst30);
        char[] subst31 = {'a', 776};
        decompositionTable.put((char) 228, subst31);
        char[] subst32 = {'a', 778};
        decompositionTable.put((char) 229, subst32);
        char[] subst33 = {'c', 807};
        decompositionTable.put((char) 231, subst33);
        char[] subst34 = {'e', 768};
        decompositionTable.put((char) 232, subst34);
        char[] subst35 = {'e', 769};
        decompositionTable.put((char) 233, subst35);
        char[] subst36 = {'e', 770};
        decompositionTable.put((char) 234, subst36);
        char[] subst37 = {'e', 776};
        decompositionTable.put((char) 235, subst37);
        char[] subst38 = {'i', 768};
        decompositionTable.put((char) 236, subst38);
        char[] subst39 = {'i', 769};
        decompositionTable.put((char) 237, subst39);
        char[] subst40 = {'i', 770};
        decompositionTable.put((char) 238, subst40);
        char[] subst41 = {'i', 776};
        decompositionTable.put((char) 239, subst41);
        char[] subst42 = {'n', 771};
        decompositionTable.put((char) 241, subst42);
        char[] subst43 = {'o', 768};
        decompositionTable.put((char) 242, subst43);
        char[] subst44 = {'o', 769};
        decompositionTable.put((char) 243, subst44);
        char[] subst45 = {'o', 770};
        decompositionTable.put((char) 244, subst45);
        char[] subst46 = {'o', 771};
        decompositionTable.put((char) 245, subst46);
        char[] subst47 = {'o', 776};
        decompositionTable.put((char) 246, subst47);
        char[] subst48 = {'u', 768};
        decompositionTable.put((char) 249, subst48);
        char[] subst49 = {'u', 769};
        decompositionTable.put((char) 250, subst49);
        char[] subst50 = {'u', 770};
        decompositionTable.put((char) 251, subst50);
        char[] subst51 = {'u', 776};
        decompositionTable.put((char) 252, subst51);
        char[] subst52 = {'y', 769};
        decompositionTable.put((char) 253, subst52);
        char[] subst53 = {'y', 776};
        decompositionTable.put((char) 255, subst53);
        char[] subst54 = {'A', 772};
        decompositionTable.put((char) 256, subst54);
        char[] subst55 = {'a', 772};
        decompositionTable.put((char) 257, subst55);
        char[] subst56 = {'A', 774};
        decompositionTable.put((char) 258, subst56);
        char[] subst57 = {'a', 774};
        decompositionTable.put((char) 259, subst57);
        char[] subst58 = {'A', 808};
        decompositionTable.put((char) 260, subst58);
        char[] subst59 = {'a', 808};
        decompositionTable.put((char) 261, subst59);
        char[] subst60 = {'C', 769};
        decompositionTable.put((char) 262, subst60);
        char[] subst61 = {'c', 769};
        decompositionTable.put((char) 263, subst61);
        char[] subst62 = {'C', 770};
        decompositionTable.put((char) 264, subst62);
        char[] subst63 = {'c', 770};
        decompositionTable.put((char) 265, subst63);
        char[] subst64 = {'C', 775};
        decompositionTable.put((char) 266, subst64);
        char[] subst65 = {'c', 775};
        decompositionTable.put((char) 267, subst65);
        char[] subst66 = {'C', 780};
        decompositionTable.put((char) 268, subst66);
        char[] subst67 = {'c', 780};
        decompositionTable.put((char) 269, subst67);
        char[] subst68 = {'D', 780};
        decompositionTable.put((char) 270, subst68);
        char[] subst69 = {'d', 780};
        decompositionTable.put((char) 271, subst69);
        char[] subst70 = {'E', 772};
        decompositionTable.put((char) 274, subst70);
        char[] subst71 = {'e', 772};
        decompositionTable.put((char) 275, subst71);
        char[] subst72 = {'E', 774};
        decompositionTable.put((char) 276, subst72);
        char[] subst73 = {'e', 774};
        decompositionTable.put((char) 277, subst73);
        char[] subst74 = {'E', 775};
        decompositionTable.put((char) 278, subst74);
        char[] subst75 = {'e', 775};
        decompositionTable.put((char) 279, subst75);
        char[] subst76 = {'E', 808};
        decompositionTable.put((char) 280, subst76);
        char[] subst77 = {'e', 808};
        decompositionTable.put((char) 281, subst77);
        char[] subst78 = {'E', 780};
        decompositionTable.put((char) 282, subst78);
        char[] subst79 = {'e', 780};
        decompositionTable.put((char) 283, subst79);
        char[] subst80 = {'G', 770};
        decompositionTable.put((char) 284, subst80);
        char[] subst81 = {'g', 770};
        decompositionTable.put((char) 285, subst81);
        char[] subst82 = {'G', 774};
        decompositionTable.put((char) 286, subst82);
        char[] subst83 = {'g', 774};
        decompositionTable.put((char) 287, subst83);
        char[] subst84 = {'G', 775};
        decompositionTable.put((char) 288, subst84);
        char[] subst85 = {'g', 775};
        decompositionTable.put((char) 289, subst85);
        char[] subst86 = {'G', 807};
        decompositionTable.put((char) 290, subst86);
        char[] subst87 = {'g', 807};
        decompositionTable.put((char) 291, subst87);
        char[] subst88 = {'H', 770};
        decompositionTable.put((char) 292, subst88);
        char[] subst89 = {'h', 770};
        decompositionTable.put((char) 293, subst89);
        char[] subst90 = {'I', 771};
        decompositionTable.put((char) 296, subst90);
        char[] subst91 = {'i', 771};
        decompositionTable.put((char) 297, subst91);
        char[] subst92 = {'I', 772};
        decompositionTable.put((char) 298, subst92);
        char[] subst93 = {'i', 772};
        decompositionTable.put((char) 299, subst93);
        char[] subst94 = {'I', 774};
        decompositionTable.put((char) 300, subst94);
        char[] subst95 = {'i', 774};
        decompositionTable.put((char) 301, subst95);
        char[] subst96 = {'I', 808};
        decompositionTable.put((char) 302, subst96);
        char[] subst97 = {'i', 808};
        decompositionTable.put((char) 303, subst97);
        char[] subst98 = {'I', 775};
        decompositionTable.put((char) 304, subst98);
        char[] subst99 = {'J', 770};
        decompositionTable.put((char) 308, subst99);
        char[] subst100 = {'j', 770};
        decompositionTable.put((char) 309, subst100);
        char[] subst101 = {'K', 807};
        decompositionTable.put((char) 310, subst101);
        char[] subst102 = {'k', 807};
        decompositionTable.put((char) 311, subst102);
        char[] subst103 = {'L', 769};
        decompositionTable.put((char) 313, subst103);
        char[] subst104 = {'l', 769};
        decompositionTable.put((char) 314, subst104);
        char[] subst105 = {'L', 807};
        decompositionTable.put((char) 315, subst105);
        char[] subst106 = {'l', 807};
        decompositionTable.put((char) 316, subst106);
        char[] subst107 = {'L', 780};
        decompositionTable.put((char) 317, subst107);
        char[] subst108 = {'l', 780};
        decompositionTable.put((char) 318, subst108);
        char[] subst109 = {'N', 769};
        decompositionTable.put((char) 323, subst109);
        char[] subst110 = {'n', 769};
        decompositionTable.put((char) 324, subst110);
        char[] subst111 = {'N', 807};
        decompositionTable.put((char) 325, subst111);
        char[] subst112 = {'n', 807};
        decompositionTable.put((char) 326, subst112);
        char[] subst113 = {'N', 780};
        decompositionTable.put((char) 327, subst113);
        char[] subst114 = {'n', 780};
        decompositionTable.put((char) 328, subst114);
        char[] subst115 = {'O', 772};
        decompositionTable.put((char) 332, subst115);
        char[] subst116 = {'o', 772};
        decompositionTable.put((char) 333, subst116);
        char[] subst117 = {'O', 774};
        decompositionTable.put((char) 334, subst117);
        char[] subst118 = {'o', 774};
        decompositionTable.put((char) 335, subst118);
        char[] subst119 = {'O', 779};
        decompositionTable.put((char) 336, subst119);
        char[] subst120 = {'o', 779};
        decompositionTable.put((char) 337, subst120);
        char[] subst121 = {'R', 769};
        decompositionTable.put((char) 340, subst121);
        char[] subst122 = {'r', 769};
        decompositionTable.put((char) 341, subst122);
        char[] subst123 = {'R', 807};
        decompositionTable.put((char) 342, subst123);
        char[] subst124 = {'r', 807};
        decompositionTable.put((char) 343, subst124);
        char[] subst125 = {'R', 780};
        decompositionTable.put((char) 344, subst125);
        char[] subst126 = {'r', 780};
        decompositionTable.put((char) 345, subst126);
        char[] subst127 = {'S', 769};
        decompositionTable.put((char) 346, subst127);
        char[] subst128 = {'s', 769};
        decompositionTable.put((char) 347, subst128);
        char[] subst129 = {'S', 770};
        decompositionTable.put((char) 348, subst129);
        char[] subst130 = {'s', 770};
        decompositionTable.put((char) 349, subst130);
        char[] subst131 = {'S', 807};
        decompositionTable.put((char) 350, subst131);
        char[] subst132 = {'s', 807};
        decompositionTable.put((char) 351, subst132);
        char[] subst133 = {'S', 780};
        decompositionTable.put((char) 352, subst133);
        char[] subst134 = {'s', 780};
        decompositionTable.put((char) 353, subst134);
        char[] subst135 = {'T', 807};
        decompositionTable.put((char) 354, subst135);
        char[] subst136 = {'t', 807};
        decompositionTable.put((char) 355, subst136);
        char[] subst137 = {'T', 780};
        decompositionTable.put((char) 356, subst137);
        char[] subst138 = {'t', 780};
        decompositionTable.put((char) 357, subst138);
        char[] subst139 = {'U', 771};
        decompositionTable.put((char) 360, subst139);
        char[] subst140 = {'u', 771};
        decompositionTable.put((char) 361, subst140);
        char[] subst141 = {'U', 772};
        decompositionTable.put((char) 362, subst141);
        char[] subst142 = {'u', 772};
        decompositionTable.put((char) 363, subst142);
        char[] subst143 = {'U', 774};
        decompositionTable.put((char) 364, subst143);
        char[] subst144 = {'u', 774};
        decompositionTable.put((char) 365, subst144);
        char[] subst145 = {'U', 778};
        decompositionTable.put((char) 366, subst145);
        char[] subst146 = {'u', 778};
        decompositionTable.put((char) 367, subst146);
        char[] subst147 = {'U', 779};
        decompositionTable.put((char) 368, subst147);
        char[] subst148 = {'u', 779};
        decompositionTable.put((char) 369, subst148);
        char[] subst149 = {'U', 808};
        decompositionTable.put((char) 370, subst149);
        char[] subst150 = {'u', 808};
        decompositionTable.put((char) 371, subst150);
        char[] subst151 = {'W', 770};
        decompositionTable.put((char) 372, subst151);
        char[] subst152 = {'w', 770};
        decompositionTable.put((char) 373, subst152);
        char[] subst153 = {'Y', 770};
        decompositionTable.put((char) 374, subst153);
        char[] subst154 = {'y', 770};
        decompositionTable.put((char) 375, subst154);
        char[] subst155 = {'Y', 776};
        decompositionTable.put((char) 376, subst155);
        char[] subst156 = {'Z', 769};
        decompositionTable.put((char) 377, subst156);
        char[] subst157 = {'z', 769};
        decompositionTable.put((char) 378, subst157);
        char[] subst158 = {'Z', 775};
        decompositionTable.put((char) 379, subst158);
        char[] subst159 = {'z', 775};
        decompositionTable.put((char) 380, subst159);
        char[] subst160 = {'Z', 780};
        decompositionTable.put((char) 381, subst160);
        char[] subst161 = {'z', 780};
        decompositionTable.put((char) 382, subst161);
        char[] subst162 = {'O', 795};
        decompositionTable.put((char) 416, subst162);
        char[] subst163 = {'o', 795};
        decompositionTable.put((char) 417, subst163);
        char[] subst164 = {'U', 795};
        decompositionTable.put((char) 431, subst164);
        char[] subst165 = {'u', 795};
        decompositionTable.put((char) 432, subst165);
        char[] subst166 = {'A', 780};
        decompositionTable.put((char) 461, subst166);
        char[] subst167 = {'a', 780};
        decompositionTable.put((char) 462, subst167);
        char[] subst168 = {'I', 780};
        decompositionTable.put((char) 463, subst168);
        char[] subst169 = {'i', 780};
        decompositionTable.put((char) 464, subst169);
        char[] subst170 = {'O', 780};
        decompositionTable.put((char) 465, subst170);
        char[] subst171 = {'o', 780};
        decompositionTable.put((char) 466, subst171);
        char[] subst172 = {'U', 780};
        decompositionTable.put((char) 467, subst172);
        char[] subst173 = {'u', 780};
        decompositionTable.put((char) 468, subst173);
        char[] subst174 = {'U', 776, 772};
        decompositionTable.put((char) 469, subst174);
        char[] subst175 = {'u', 776, 772};
        decompositionTable.put((char) 470, subst175);
        char[] subst176 = {'U', 776, 769};
        decompositionTable.put((char) 471, subst176);
        char[] subst177 = {'u', 776, 769};
        decompositionTable.put((char) 472, subst177);
        char[] subst178 = {'U', 776, 780};
        decompositionTable.put((char) 473, subst178);
        char[] subst179 = {'u', 776, 780};
        decompositionTable.put((char) 474, subst179);
        char[] subst180 = {'U', 776, 768};
        decompositionTable.put((char) 475, subst180);
        char[] subst181 = {'u', 776, 768};
        decompositionTable.put((char) 476, subst181);
        char[] subst182 = {'A', 776, 772};
        decompositionTable.put((char) 478, subst182);
        char[] subst183 = {'a', 776, 772};
        decompositionTable.put((char) 479, subst183);
        char[] subst184 = {'A', 775, 772};
        decompositionTable.put((char) 480, subst184);
        char[] subst185 = {'a', 775, 772};
        decompositionTable.put((char) 481, subst185);
        char[] subst186 = {198, 772};
        decompositionTable.put((char) 482, subst186);
        char[] subst187 = {230, 772};
        decompositionTable.put((char) 483, subst187);
        char[] subst188 = {'G', 780};
        decompositionTable.put((char) 486, subst188);
        char[] subst189 = {'g', 780};
        decompositionTable.put((char) 487, subst189);
        char[] subst190 = {'K', 780};
        decompositionTable.put((char) 488, subst190);
        char[] subst191 = {'k', 780};
        decompositionTable.put((char) 489, subst191);
        char[] subst192 = {'O', 808};
        decompositionTable.put((char) 490, subst192);
        char[] subst193 = {'o', 808};
        decompositionTable.put((char) 491, subst193);
        char[] subst194 = {'O', 808, 772};
        decompositionTable.put((char) 492, subst194);
        char[] subst195 = {'o', 808, 772};
        decompositionTable.put((char) 493, subst195);
        char[] subst196 = {439, 780};
        decompositionTable.put((char) 494, subst196);
        char[] subst197 = {658, 780};
        decompositionTable.put((char) 495, subst197);
        char[] subst198 = {'j', 780};
        decompositionTable.put((char) 496, subst198);
        char[] subst199 = {'G', 769};
        decompositionTable.put((char) 500, subst199);
        char[] subst200 = {'g', 769};
        decompositionTable.put((char) 501, subst200);
        char[] subst201 = {'A', 778, 769};
        decompositionTable.put((char) 506, subst201);
        char[] subst202 = {'a', 778, 769};
        decompositionTable.put((char) 507, subst202);
        char[] subst203 = {198, 769};
        decompositionTable.put((char) 508, subst203);
        char[] subst204 = {230, 769};
        decompositionTable.put((char) 509, subst204);
        char[] subst205 = {216, 769};
        decompositionTable.put((char) 510, subst205);
        char[] subst206 = {248, 769};
        decompositionTable.put((char) 511, subst206);
        char[] subst207 = {'A', 783};
        decompositionTable.put((char) 512, subst207);
        char[] subst208 = {'a', 783};
        decompositionTable.put((char) 513, subst208);
        char[] subst209 = {'A', 785};
        decompositionTable.put((char) 514, subst209);
        char[] subst210 = {'a', 785};
        decompositionTable.put((char) 515, subst210);
        char[] subst211 = {'E', 783};
        decompositionTable.put((char) 516, subst211);
        char[] subst212 = {'e', 783};
        decompositionTable.put((char) 517, subst212);
        char[] subst213 = {'E', 785};
        decompositionTable.put((char) 518, subst213);
        char[] subst214 = {'e', 785};
        decompositionTable.put((char) 519, subst214);
        char[] subst215 = {'I', 783};
        decompositionTable.put((char) 520, subst215);
        char[] subst216 = {'i', 783};
        decompositionTable.put((char) 521, subst216);
        char[] subst217 = {'I', 785};
        decompositionTable.put((char) 522, subst217);
        char[] subst218 = {'i', 785};
        decompositionTable.put((char) 523, subst218);
        char[] subst219 = {'O', 783};
        decompositionTable.put((char) 524, subst219);
        char[] subst220 = {'o', 783};
        decompositionTable.put((char) 525, subst220);
        char[] subst221 = {'O', 785};
        decompositionTable.put((char) 526, subst221);
        char[] subst222 = {'o', 785};
        decompositionTable.put((char) 527, subst222);
        char[] subst223 = {'R', 783};
        decompositionTable.put((char) 528, subst223);
        char[] subst224 = {'r', 783};
        decompositionTable.put((char) 529, subst224);
        char[] subst225 = {'R', 785};
        decompositionTable.put((char) 530, subst225);
        char[] subst226 = {'r', 785};
        decompositionTable.put((char) 531, subst226);
        char[] subst227 = {'U', 783};
        decompositionTable.put((char) 532, subst227);
        char[] subst228 = {'u', 783};
        decompositionTable.put((char) 533, subst228);
        char[] subst229 = {'U', 785};
        decompositionTable.put((char) 534, subst229);
        char[] subst230 = {'u', 785};
        decompositionTable.put((char) 535, subst230);
        char[] subst231 = {774, 775};
        decompositionTable.put((char) 784, subst231);
        char[] subst232 = {768};
        decompositionTable.put((char) 832, subst232);
        char[] subst233 = {769};
        decompositionTable.put((char) 833, subst233);
        char[] subst234 = {787};
        decompositionTable.put((char) 835, subst234);
        char[] subst235 = {776, 781};
        decompositionTable.put((char) 836, subst235);
        char[] subst236 = {697};
        decompositionTable.put((char) 884, subst236);
        char[] subst237 = {';'};
        decompositionTable.put((char) 894, subst237);
        char[] subst238 = {168, 781};
        decompositionTable.put((char) 901, subst238);
        char[] subst239 = {913, 781};
        decompositionTable.put((char) 902, subst239);
        char[] subst240 = {183};
        decompositionTable.put((char) 903, subst240);
        char[] subst241 = {917, 781};
        decompositionTable.put((char) 904, subst241);
        char[] subst242 = {919, 781};
        decompositionTable.put((char) 905, subst242);
        char[] subst243 = {921, 781};
        decompositionTable.put((char) 906, subst243);
        char[] subst244 = {927, 781};
        decompositionTable.put((char) 908, subst244);
        char[] subst245 = {933, 781};
        decompositionTable.put((char) 910, subst245);
        char[] subst246 = {937, 781};
        decompositionTable.put((char) 911, subst246);
        char[] subst247 = {953, 776, 781};
        decompositionTable.put((char) 912, subst247);
        char[] subst248 = {921, 776};
        decompositionTable.put((char) 938, subst248);
        char[] subst249 = {933, 776};
        decompositionTable.put((char) 939, subst249);
        char[] subst250 = {945, 781};
        decompositionTable.put((char) 940, subst250);
        char[] subst251 = {949, 781};
        decompositionTable.put((char) 941, subst251);
        char[] subst252 = {951, 781};
        decompositionTable.put((char) 942, subst252);
        char[] subst253 = {953, 781};
        decompositionTable.put((char) 943, subst253);
        char[] subst254 = {965, 776, 781};
        decompositionTable.put((char) 944, subst254);
        char[] subst255 = {953, 776};
        decompositionTable.put((char) 970, subst255);
        char[] subst256 = {965, 776};
        decompositionTable.put((char) 971, subst256);
        char[] subst257 = {959, 781};
        decompositionTable.put((char) 972, subst257);
        char[] subst258 = {965, 781};
        decompositionTable.put((char) 973, subst258);
        char[] subst259 = {969, 781};
        decompositionTable.put((char) 974, subst259);
        char[] subst260 = {978, 781};
        decompositionTable.put((char) 979, subst260);
        char[] subst261 = {978, 776};
        decompositionTable.put((char) 980, subst261);
        char[] subst262 = {1045, 776};
        decompositionTable.put((char) 1025, subst262);
        char[] subst263 = {1043, 769};
        decompositionTable.put((char) 1027, subst263);
        char[] subst264 = {1030, 776};
        decompositionTable.put((char) 1031, subst264);
        char[] subst265 = {1050, 769};
        decompositionTable.put((char) 1036, subst265);
        char[] subst266 = {1059, 774};
        decompositionTable.put((char) 1038, subst266);
        char[] subst267 = {1048, 774};
        decompositionTable.put((char) 1049, subst267);
        char[] subst268 = {1080, 774};
        decompositionTable.put((char) 1081, subst268);
        char[] subst269 = {1077, 776};
        decompositionTable.put((char) 1105, subst269);
        char[] subst270 = {1075, 769};
        decompositionTable.put((char) 1107, subst270);
        char[] subst271 = {1110, 776};
        decompositionTable.put((char) 1111, subst271);
        char[] subst272 = {1082, 769};
        decompositionTable.put((char) 1116, subst272);
        char[] subst273 = {1091, 774};
        decompositionTable.put((char) 1118, subst273);
        char[] subst274 = {1140, 783};
        decompositionTable.put((char) 1142, subst274);
        char[] subst275 = {1141, 783};
        decompositionTable.put((char) 1143, subst275);
        char[] subst276 = {1046, 774};
        decompositionTable.put((char) 1217, subst276);
        char[] subst277 = {1078, 774};
        decompositionTable.put((char) 1218, subst277);
        char[] subst278 = {1040, 774};
        decompositionTable.put((char) 1232, subst278);
        char[] subst279 = {1072, 774};
        decompositionTable.put((char) 1233, subst279);
        char[] subst280 = {1040, 776};
        decompositionTable.put((char) 1234, subst280);
        char[] subst281 = {1072, 776};
        decompositionTable.put((char) 1235, subst281);
        char[] subst282 = {198};
        decompositionTable.put((char) 1236, subst282);
        char[] subst283 = {230};
        decompositionTable.put((char) 1237, subst283);
        char[] subst284 = {1045, 774};
        decompositionTable.put((char) 1238, subst284);
        char[] subst285 = {1077, 774};
        decompositionTable.put((char) 1239, subst285);
        char[] subst286 = {399};
        decompositionTable.put((char) 1240, subst286);
        char[] subst287 = {601};
        decompositionTable.put((char) 1241, subst287);
        char[] subst288 = {399, 776};
        decompositionTable.put((char) 1242, subst288);
        char[] subst289 = {601, 776};
        decompositionTable.put((char) 1243, subst289);
        char[] subst290 = {1046, 776};
        decompositionTable.put((char) 1244, subst290);
        char[] subst291 = {1078, 776};
        decompositionTable.put((char) 1245, subst291);
        char[] subst292 = {1047, 776};
        decompositionTable.put((char) 1246, subst292);
        char[] subst293 = {1079, 776};
        decompositionTable.put((char) 1247, subst293);
        char[] subst294 = {439};
        decompositionTable.put((char) 1248, subst294);
        char[] subst295 = {658};
        decompositionTable.put((char) 1249, subst295);
        char[] subst296 = {1048, 772};
        decompositionTable.put((char) 1250, subst296);
        char[] subst297 = {1080, 772};
        decompositionTable.put((char) 1251, subst297);
        char[] subst298 = {1048, 776};
        decompositionTable.put((char) 1252, subst298);
        char[] subst299 = {1080, 776};
        decompositionTable.put((char) 1253, subst299);
        char[] subst300 = {1054, 776};
        decompositionTable.put((char) 1254, subst300);
        char[] subst301 = {1086, 776};
        decompositionTable.put((char) 1255, subst301);
        char[] subst302 = {415};
        decompositionTable.put((char) 1256, subst302);
        char[] subst303 = {629};
        decompositionTable.put((char) 1257, subst303);
        char[] subst304 = {415, 776};
        decompositionTable.put((char) 1258, subst304);
        char[] subst305 = {629, 776};
        decompositionTable.put((char) 1259, subst305);
        char[] subst306 = {1059, 772};
        decompositionTable.put((char) 1262, subst306);
        char[] subst307 = {1091, 772};
        decompositionTable.put((char) 1263, subst307);
        char[] subst308 = {1059, 776};
        decompositionTable.put((char) 1264, subst308);
        char[] subst309 = {1091, 776};
        decompositionTable.put((char) 1265, subst309);
        char[] subst310 = {1059, 779};
        decompositionTable.put((char) 1266, subst310);
        char[] subst311 = {1091, 779};
        decompositionTable.put((char) 1267, subst311);
        char[] subst312 = {1063, 776};
        decompositionTable.put((char) 1268, subst312);
        char[] subst313 = {1095, 776};
        decompositionTable.put((char) 1269, subst313);
        char[] subst314 = {1067, 776};
        decompositionTable.put((char) 1272, subst314);
        char[] subst315 = {1099, 776};
        decompositionTable.put((char) 1273, subst315);
        char[] subst316 = {2344, 2364};
        decompositionTable.put((char) 2345, subst316);
        char[] subst317 = {2352, 2364};
        decompositionTable.put((char) 2353, subst317);
        char[] subst318 = {2355, 2364};
        decompositionTable.put((char) 2356, subst318);
        char[] subst319 = {2325, 2364};
        decompositionTable.put((char) 2392, subst319);
        char[] subst320 = {2326, 2364};
        decompositionTable.put((char) 2393, subst320);
        char[] subst321 = {2327, 2364};
        decompositionTable.put((char) 2394, subst321);
        char[] subst322 = {2332, 2364};
        decompositionTable.put((char) 2395, subst322);
        char[] subst323 = {2337, 2364};
        decompositionTable.put((char) 2396, subst323);
        char[] subst324 = {2338, 2364};
        decompositionTable.put((char) 2397, subst324);
        char[] subst325 = {2347, 2364};
        decompositionTable.put((char) 2398, subst325);
        char[] subst326 = {2351, 2364};
        decompositionTable.put((char) 2399, subst326);
        char[] subst327 = {2476, 2492};
        decompositionTable.put((char) 2480, subst327);
        char[] subst328 = {2503, 2494};
        decompositionTable.put((char) 2507, subst328);
        char[] subst329 = {2503, 2519};
        decompositionTable.put((char) 2508, subst329);
        char[] subst330 = {2465, 2492};
        decompositionTable.put((char) 2524, subst330);
        char[] subst331 = {2466, 2492};
        decompositionTable.put((char) 2525, subst331);
        char[] subst332 = {2479, 2492};
        decompositionTable.put((char) 2527, subst332);
        char[] subst333 = {2582, 2620};
        decompositionTable.put((char) 2649, subst333);
        char[] subst334 = {2583, 2620};
        decompositionTable.put((char) 2650, subst334);
        char[] subst335 = {2588, 2620};
        decompositionTable.put((char) 2651, subst335);
        char[] subst336 = {2593, 2620};
        decompositionTable.put((char) 2652, subst336);
        char[] subst337 = {2603, 2620};
        decompositionTable.put((char) 2654, subst337);
        char[] subst338 = {2887, 2902};
        decompositionTable.put((char) 2888, subst338);
        char[] subst339 = {2887, 2878};
        decompositionTable.put((char) 2891, subst339);
        char[] subst340 = {2887, 2903};
        decompositionTable.put((char) 2892, subst340);
        char[] subst341 = {2849, 2876};
        decompositionTable.put((char) 2908, subst341);
        char[] subst342 = {2850, 2876};
        decompositionTable.put((char) 2909, subst342);
        char[] subst343 = {2863, 2876};
        decompositionTable.put((char) 2911, subst343);
        char[] subst344 = {2962, 3031};
        decompositionTable.put((char) 2964, subst344);
        char[] subst345 = {3014, 3006};
        decompositionTable.put((char) 3018, subst345);
        char[] subst346 = {3015, 3006};
        decompositionTable.put((char) 3019, subst346);
        char[] subst347 = {3014, 3031};
        decompositionTable.put((char) 3020, subst347);
        char[] subst348 = {3142, 3158};
        decompositionTable.put((char) 3144, subst348);
        char[] subst349 = {3263, 3285};
        decompositionTable.put((char) 3264, subst349);
        char[] subst350 = {3270, 3285};
        decompositionTable.put((char) 3271, subst350);
        char[] subst351 = {3270, 3286};
        decompositionTable.put((char) 3272, subst351);
        char[] subst352 = {3270, 3266};
        decompositionTable.put((char) 3274, subst352);
        char[] subst353 = {3270, 3266, 3285};
        decompositionTable.put((char) 3275, subst353);
        char[] subst354 = {3398, 3390};
        decompositionTable.put((char) 3402, subst354);
        char[] subst355 = {3399, 3390};
        decompositionTable.put((char) 3403, subst355);
        char[] subst356 = {3398, 3415};
        decompositionTable.put((char) 3404, subst356);
        char[] subst357 = {3661, 3634};
        decompositionTable.put((char) 3635, subst357);
        char[] subst358 = {3789, 3762};
        decompositionTable.put((char) 3763, subst358);
        char[] subst359 = {3906, 4023};
        decompositionTable.put((char) 3907, subst359);
        char[] subst360 = {3916, 4023};
        decompositionTable.put((char) 3917, subst360);
        char[] subst361 = {3921, 4023};
        decompositionTable.put((char) 3922, subst361);
        char[] subst362 = {3926, 4023};
        decompositionTable.put((char) 3927, subst362);
        char[] subst363 = {3931, 4023};
        decompositionTable.put((char) 3932, subst363);
        char[] subst364 = {3904, 4021};
        decompositionTable.put((char) 3945, subst364);
        char[] subst365 = {3954, 3953};
        decompositionTable.put((char) 3955, subst365);
        char[] subst366 = {3956, 3953};
        decompositionTable.put((char) 3957, subst366);
        char[] subst367 = {4018, 3968};
        decompositionTable.put((char) 3958, subst367);
        char[] subst368 = {4018, 3968, 3953};
        decompositionTable.put((char) 3959, subst368);
        char[] subst369 = {4019, 3968};
        decompositionTable.put((char) 3960, subst369);
        char[] subst370 = {4019, 3968, 3953};
        decompositionTable.put((char) 3961, subst370);
        char[] subst371 = {3968, 3953};
        decompositionTable.put((char) 3969, subst371);
        char[] subst372 = {3986, 4023};
        decompositionTable.put((char) 3987, subst372);
        char[] subst373 = {3996, 4023};
        decompositionTable.put((char) 3997, subst373);
        char[] subst374 = {4001, 4023};
        decompositionTable.put((char) 4002, subst374);
        char[] subst375 = {4006, 4023};
        decompositionTable.put((char) 4007, subst375);
        char[] subst376 = {4011, 4023};
        decompositionTable.put((char) 4012, subst376);
        char[] subst377 = {3984, 4021};
        decompositionTable.put((char) 4025, subst377);
        char[] subst378 = {'A', 805};
        decompositionTable.put((char) 7680, subst378);
        char[] subst379 = {'a', 805};
        decompositionTable.put((char) 7681, subst379);
        char[] subst380 = {'B', 775};
        decompositionTable.put((char) 7682, subst380);
        char[] subst381 = {'b', 775};
        decompositionTable.put((char) 7683, subst381);
        char[] subst382 = {'B', 803};
        decompositionTable.put((char) 7684, subst382);
        char[] subst383 = {'b', 803};
        decompositionTable.put((char) 7685, subst383);
        char[] subst384 = {'B', 817};
        decompositionTable.put((char) 7686, subst384);
        char[] subst385 = {'b', 817};
        decompositionTable.put((char) 7687, subst385);
        char[] subst386 = {'C', 807, 769};
        decompositionTable.put((char) 7688, subst386);
        char[] subst387 = {'c', 807, 769};
        decompositionTable.put((char) 7689, subst387);
        char[] subst388 = {'D', 775};
        decompositionTable.put((char) 7690, subst388);
        char[] subst389 = {'d', 775};
        decompositionTable.put((char) 7691, subst389);
        char[] subst390 = {'D', 803};
        decompositionTable.put((char) 7692, subst390);
        char[] subst391 = {'d', 803};
        decompositionTable.put((char) 7693, subst391);
        char[] subst392 = {'D', 817};
        decompositionTable.put((char) 7694, subst392);
        char[] subst393 = {'d', 817};
        decompositionTable.put((char) 7695, subst393);
        char[] subst394 = {'D', 807};
        decompositionTable.put((char) 7696, subst394);
        char[] subst395 = {'d', 807};
        decompositionTable.put((char) 7697, subst395);
        char[] subst396 = {'D', 813};
        decompositionTable.put((char) 7698, subst396);
        char[] subst397 = {'d', 813};
        decompositionTable.put((char) 7699, subst397);
        char[] subst398 = {'E', 772, 768};
        decompositionTable.put((char) 7700, subst398);
        char[] subst399 = {'e', 772, 768};
        decompositionTable.put((char) 7701, subst399);
        char[] subst400 = {'E', 772, 769};
        decompositionTable.put((char) 7702, subst400);
        char[] subst401 = {'e', 772, 769};
        decompositionTable.put((char) 7703, subst401);
        char[] subst402 = {'E', 813};
        decompositionTable.put((char) 7704, subst402);
        char[] subst403 = {'e', 813};
        decompositionTable.put((char) 7705, subst403);
        char[] subst404 = {'E', 816};
        decompositionTable.put((char) 7706, subst404);
        char[] subst405 = {'e', 816};
        decompositionTable.put((char) 7707, subst405);
        char[] subst406 = {'E', 807, 774};
        decompositionTable.put((char) 7708, subst406);
        char[] subst407 = {'e', 807, 774};
        decompositionTable.put((char) 7709, subst407);
        char[] subst408 = {'F', 775};
        decompositionTable.put((char) 7710, subst408);
        char[] subst409 = {'f', 775};
        decompositionTable.put((char) 7711, subst409);
        char[] subst410 = {'G', 772};
        decompositionTable.put((char) 7712, subst410);
        char[] subst411 = {'g', 772};
        decompositionTable.put((char) 7713, subst411);
        char[] subst412 = {'H', 775};
        decompositionTable.put((char) 7714, subst412);
        char[] subst413 = {'h', 775};
        decompositionTable.put((char) 7715, subst413);
        char[] subst414 = {'H', 803};
        decompositionTable.put((char) 7716, subst414);
        char[] subst415 = {'h', 803};
        decompositionTable.put((char) 7717, subst415);
        char[] subst416 = {'H', 776};
        decompositionTable.put((char) 7718, subst416);
        char[] subst417 = {'h', 776};
        decompositionTable.put((char) 7719, subst417);
        char[] subst418 = {'H', 807};
        decompositionTable.put((char) 7720, subst418);
        char[] subst419 = {'h', 807};
        decompositionTable.put((char) 7721, subst419);
        char[] subst420 = {'H', 814};
        decompositionTable.put((char) 7722, subst420);
        char[] subst421 = {'h', 814};
        decompositionTable.put((char) 7723, subst421);
        char[] subst422 = {'I', 816};
        decompositionTable.put((char) 7724, subst422);
        char[] subst423 = {'i', 816};
        decompositionTable.put((char) 7725, subst423);
        char[] subst424 = {'I', 776, 769};
        decompositionTable.put((char) 7726, subst424);
        char[] subst425 = {'i', 776, 769};
        decompositionTable.put((char) 7727, subst425);
        char[] subst426 = {'K', 769};
        decompositionTable.put((char) 7728, subst426);
        char[] subst427 = {'k', 769};
        decompositionTable.put((char) 7729, subst427);
        char[] subst428 = {'K', 803};
        decompositionTable.put((char) 7730, subst428);
        char[] subst429 = {'k', 803};
        decompositionTable.put((char) 7731, subst429);
        char[] subst430 = {'K', 817};
        decompositionTable.put((char) 7732, subst430);
        char[] subst431 = {'k', 817};
        decompositionTable.put((char) 7733, subst431);
        char[] subst432 = {'L', 803};
        decompositionTable.put((char) 7734, subst432);
        char[] subst433 = {'l', 803};
        decompositionTable.put((char) 7735, subst433);
        char[] subst434 = {'L', 803, 772};
        decompositionTable.put((char) 7736, subst434);
        char[] subst435 = {'l', 803, 772};
        decompositionTable.put((char) 7737, subst435);
        char[] subst436 = {'L', 817};
        decompositionTable.put((char) 7738, subst436);
        char[] subst437 = {'l', 817};
        decompositionTable.put((char) 7739, subst437);
        char[] subst438 = {'L', 813};
        decompositionTable.put((char) 7740, subst438);
        char[] subst439 = {'l', 813};
        decompositionTable.put((char) 7741, subst439);
        char[] subst440 = {'M', 769};
        decompositionTable.put((char) 7742, subst440);
        char[] subst441 = {'m', 769};
        decompositionTable.put((char) 7743, subst441);
        char[] subst442 = {'M', 775};
        decompositionTable.put((char) 7744, subst442);
        char[] subst443 = {'m', 775};
        decompositionTable.put((char) 7745, subst443);
        char[] subst444 = {'M', 803};
        decompositionTable.put((char) 7746, subst444);
        char[] subst445 = {'m', 803};
        decompositionTable.put((char) 7747, subst445);
        char[] subst446 = {'N', 775};
        decompositionTable.put((char) 7748, subst446);
        char[] subst447 = {'n', 775};
        decompositionTable.put((char) 7749, subst447);
        char[] subst448 = {'N', 803};
        decompositionTable.put((char) 7750, subst448);
        char[] subst449 = {'n', 803};
        decompositionTable.put((char) 7751, subst449);
        char[] subst450 = {'N', 817};
        decompositionTable.put((char) 7752, subst450);
        char[] subst451 = {'n', 817};
        decompositionTable.put((char) 7753, subst451);
        char[] subst452 = {'N', 813};
        decompositionTable.put((char) 7754, subst452);
        char[] subst453 = {'n', 813};
        decompositionTable.put((char) 7755, subst453);
        char[] subst454 = {'O', 771, 769};
        decompositionTable.put((char) 7756, subst454);
        char[] subst455 = {'o', 771, 769};
        decompositionTable.put((char) 7757, subst455);
        char[] subst456 = {'O', 771, 776};
        decompositionTable.put((char) 7758, subst456);
        char[] subst457 = {'o', 771, 776};
        decompositionTable.put((char) 7759, subst457);
        char[] subst458 = {'O', 772, 768};
        decompositionTable.put((char) 7760, subst458);
        char[] subst459 = {'o', 772, 768};
        decompositionTable.put((char) 7761, subst459);
        char[] subst460 = {'O', 772, 769};
        decompositionTable.put((char) 7762, subst460);
        char[] subst461 = {'o', 772, 769};
        decompositionTable.put((char) 7763, subst461);
        char[] subst462 = {'P', 769};
        decompositionTable.put((char) 7764, subst462);
        char[] subst463 = {'p', 769};
        decompositionTable.put((char) 7765, subst463);
        char[] subst464 = {'P', 775};
        decompositionTable.put((char) 7766, subst464);
        char[] subst465 = {'p', 775};
        decompositionTable.put((char) 7767, subst465);
        char[] subst466 = {'R', 775};
        decompositionTable.put((char) 7768, subst466);
        char[] subst467 = {'r', 775};
        decompositionTable.put((char) 7769, subst467);
        char[] subst468 = {'R', 803};
        decompositionTable.put((char) 7770, subst468);
        char[] subst469 = {'r', 803};
        decompositionTable.put((char) 7771, subst469);
        char[] subst470 = {'R', 803, 772};
        decompositionTable.put((char) 7772, subst470);
        char[] subst471 = {'r', 803, 772};
        decompositionTable.put((char) 7773, subst471);
        char[] subst472 = {'R', 817};
        decompositionTable.put((char) 7774, subst472);
        char[] subst473 = {'r', 817};
        decompositionTable.put((char) 7775, subst473);
        char[] subst474 = {'S', 775};
        decompositionTable.put((char) 7776, subst474);
        char[] subst475 = {'s', 775};
        decompositionTable.put((char) 7777, subst475);
        char[] subst476 = {'S', 803};
        decompositionTable.put((char) 7778, subst476);
        char[] subst477 = {'s', 803};
        decompositionTable.put((char) 7779, subst477);
        char[] subst478 = {'S', 769, 775};
        decompositionTable.put((char) 7780, subst478);
        char[] subst479 = {'s', 769, 775};
        decompositionTable.put((char) 7781, subst479);
        char[] subst480 = {'S', 780, 775};
        decompositionTable.put((char) 7782, subst480);
        char[] subst481 = {'s', 780, 775};
        decompositionTable.put((char) 7783, subst481);
        char[] subst482 = {'S', 803, 775};
        decompositionTable.put((char) 7784, subst482);
        char[] subst483 = {'s', 803, 775};
        decompositionTable.put((char) 7785, subst483);
        char[] subst484 = {'T', 775};
        decompositionTable.put((char) 7786, subst484);
        char[] subst485 = {'t', 775};
        decompositionTable.put((char) 7787, subst485);
        char[] subst486 = {'T', 803};
        decompositionTable.put((char) 7788, subst486);
        char[] subst487 = {'t', 803};
        decompositionTable.put((char) 7789, subst487);
        char[] subst488 = {'T', 817};
        decompositionTable.put((char) 7790, subst488);
        char[] subst489 = {'t', 817};
        decompositionTable.put((char) 7791, subst489);
        char[] subst490 = {'T', 813};
        decompositionTable.put((char) 7792, subst490);
        char[] subst491 = {'t', 813};
        decompositionTable.put((char) 7793, subst491);
        char[] subst492 = {'U', 804};
        decompositionTable.put((char) 7794, subst492);
        char[] subst493 = {'u', 804};
        decompositionTable.put((char) 7795, subst493);
        char[] subst494 = {'U', 816};
        decompositionTable.put((char) 7796, subst494);
        char[] subst495 = {'u', 816};
        decompositionTable.put((char) 7797, subst495);
        char[] subst496 = {'U', 813};
        decompositionTable.put((char) 7798, subst496);
        char[] subst497 = {'u', 813};
        decompositionTable.put((char) 7799, subst497);
        char[] subst498 = {'U', 771, 769};
        decompositionTable.put((char) 7800, subst498);
        char[] subst499 = {'u', 771, 769};
        decompositionTable.put((char) 7801, subst499);
        char[] subst500 = {'U', 772, 776};
        decompositionTable.put((char) 7802, subst500);
        char[] subst501 = {'u', 772, 776};
        decompositionTable.put((char) 7803, subst501);
        char[] subst502 = {'V', 771};
        decompositionTable.put((char) 7804, subst502);
        char[] subst503 = {'v', 771};
        decompositionTable.put((char) 7805, subst503);
        char[] subst504 = {'V', 803};
        decompositionTable.put((char) 7806, subst504);
        char[] subst505 = {'v', 803};
        decompositionTable.put((char) 7807, subst505);
        char[] subst506 = {'W', 768};
        decompositionTable.put((char) 7808, subst506);
        char[] subst507 = {'w', 768};
        decompositionTable.put((char) 7809, subst507);
        char[] subst508 = {'W', 769};
        decompositionTable.put((char) 7810, subst508);
        char[] subst509 = {'w', 769};
        decompositionTable.put((char) 7811, subst509);
        char[] subst510 = {'W', 776};
        decompositionTable.put((char) 7812, subst510);
        char[] subst511 = {'w', 776};
        decompositionTable.put((char) 7813, subst511);
        char[] subst512 = {'W', 775};
        decompositionTable.put((char) 7814, subst512);
        char[] subst513 = {'w', 775};
        decompositionTable.put((char) 7815, subst513);
        char[] subst514 = {'W', 803};
        decompositionTable.put((char) 7816, subst514);
        char[] subst515 = {'w', 803};
        decompositionTable.put((char) 7817, subst515);
        char[] subst516 = {'X', 775};
        decompositionTable.put((char) 7818, subst516);
        char[] subst517 = {'x', 775};
        decompositionTable.put((char) 7819, subst517);
        char[] subst518 = {'X', 776};
        decompositionTable.put((char) 7820, subst518);
        char[] subst519 = {'x', 776};
        decompositionTable.put((char) 7821, subst519);
        char[] subst520 = {'Y', 775};
        decompositionTable.put((char) 7822, subst520);
        char[] subst521 = {'y', 775};
        decompositionTable.put((char) 7823, subst521);
        char[] subst522 = {'Z', 770};
        decompositionTable.put((char) 7824, subst522);
        char[] subst523 = {'z', 770};
        decompositionTable.put((char) 7825, subst523);
        char[] subst524 = {'Z', 803};
        decompositionTable.put((char) 7826, subst524);
        char[] subst525 = {'z', 803};
        decompositionTable.put((char) 7827, subst525);
        char[] subst526 = {'Z', 817};
        decompositionTable.put((char) 7828, subst526);
        char[] subst527 = {'z', 817};
        decompositionTable.put((char) 7829, subst527);
        char[] subst528 = {'h', 817};
        decompositionTable.put((char) 7830, subst528);
        char[] subst529 = {'t', 776};
        decompositionTable.put((char) 7831, subst529);
        char[] subst530 = {'w', 778};
        decompositionTable.put((char) 7832, subst530);
        char[] subst531 = {'y', 778};
        decompositionTable.put((char) 7833, subst531);
        char[] subst532 = {383, 775};
        decompositionTable.put((char) 7835, subst532);
        char[] subst533 = {'A', 803};
        decompositionTable.put((char) 7840, subst533);
        char[] subst534 = {'a', 803};
        decompositionTable.put((char) 7841, subst534);
        char[] subst535 = {'A', 777};
        decompositionTable.put((char) 7842, subst535);
        char[] subst536 = {'a', 777};
        decompositionTable.put((char) 7843, subst536);
        char[] subst537 = {'A', 770, 769};
        decompositionTable.put((char) 7844, subst537);
        char[] subst538 = {'a', 770, 769};
        decompositionTable.put((char) 7845, subst538);
        char[] subst539 = {'A', 770, 768};
        decompositionTable.put((char) 7846, subst539);
        char[] subst540 = {'a', 770, 768};
        decompositionTable.put((char) 7847, subst540);
        char[] subst541 = {'A', 770, 777};
        decompositionTable.put((char) 7848, subst541);
        char[] subst542 = {'a', 770, 777};
        decompositionTable.put((char) 7849, subst542);
        char[] subst543 = {'A', 770, 771};
        decompositionTable.put((char) 7850, subst543);
        char[] subst544 = {'a', 770, 771};
        decompositionTable.put((char) 7851, subst544);
        char[] subst545 = {'A', 803, 770};
        decompositionTable.put((char) 7852, subst545);
        char[] subst546 = {'a', 803, 770};
        decompositionTable.put((char) 7853, subst546);
        char[] subst547 = {'A', 774, 769};
        decompositionTable.put((char) 7854, subst547);
        char[] subst548 = {'a', 774, 769};
        decompositionTable.put((char) 7855, subst548);
        char[] subst549 = {'A', 774, 768};
        decompositionTable.put((char) 7856, subst549);
        char[] subst550 = {'a', 774, 768};
        decompositionTable.put((char) 7857, subst550);
        char[] subst551 = {'A', 774, 777};
        decompositionTable.put((char) 7858, subst551);
        char[] subst552 = {'a', 774, 777};
        decompositionTable.put((char) 7859, subst552);
        char[] subst553 = {'A', 774, 771};
        decompositionTable.put((char) 7860, subst553);
        char[] subst554 = {'a', 774, 771};
        decompositionTable.put((char) 7861, subst554);
        char[] subst555 = {'A', 803, 774};
        decompositionTable.put((char) 7862, subst555);
        char[] subst556 = {'a', 803, 774};
        decompositionTable.put((char) 7863, subst556);
        char[] subst557 = {'E', 803};
        decompositionTable.put((char) 7864, subst557);
        char[] subst558 = {'e', 803};
        decompositionTable.put((char) 7865, subst558);
        char[] subst559 = {'E', 777};
        decompositionTable.put((char) 7866, subst559);
        char[] subst560 = {'e', 777};
        decompositionTable.put((char) 7867, subst560);
        char[] subst561 = {'E', 771};
        decompositionTable.put((char) 7868, subst561);
        char[] subst562 = {'e', 771};
        decompositionTable.put((char) 7869, subst562);
        char[] subst563 = {'E', 770, 769};
        decompositionTable.put((char) 7870, subst563);
        char[] subst564 = {'e', 770, 769};
        decompositionTable.put((char) 7871, subst564);
        char[] subst565 = {'E', 770, 768};
        decompositionTable.put((char) 7872, subst565);
        char[] subst566 = {'e', 770, 768};
        decompositionTable.put((char) 7873, subst566);
        char[] subst567 = {'E', 770, 777};
        decompositionTable.put((char) 7874, subst567);
        char[] subst568 = {'e', 770, 777};
        decompositionTable.put((char) 7875, subst568);
        char[] subst569 = {'E', 770, 771};
        decompositionTable.put((char) 7876, subst569);
        char[] subst570 = {'e', 770, 771};
        decompositionTable.put((char) 7877, subst570);
        char[] subst571 = {'E', 803, 770};
        decompositionTable.put((char) 7878, subst571);
        char[] subst572 = {'e', 803, 770};
        decompositionTable.put((char) 7879, subst572);
        char[] subst573 = {'I', 777};
        decompositionTable.put((char) 7880, subst573);
        char[] subst574 = {'i', 777};
        decompositionTable.put((char) 7881, subst574);
        char[] subst575 = {'I', 803};
        decompositionTable.put((char) 7882, subst575);
        char[] subst576 = {'i', 803};
        decompositionTable.put((char) 7883, subst576);
        char[] subst577 = {'O', 803};
        decompositionTable.put((char) 7884, subst577);
        char[] subst578 = {'o', 803};
        decompositionTable.put((char) 7885, subst578);
        char[] subst579 = {'O', 777};
        decompositionTable.put((char) 7886, subst579);
        char[] subst580 = {'o', 777};
        decompositionTable.put((char) 7887, subst580);
        char[] subst581 = {'O', 770, 769};
        decompositionTable.put((char) 7888, subst581);
        char[] subst582 = {'o', 770, 769};
        decompositionTable.put((char) 7889, subst582);
        char[] subst583 = {'O', 770, 768};
        decompositionTable.put((char) 7890, subst583);
        char[] subst584 = {'o', 770, 768};
        decompositionTable.put((char) 7891, subst584);
        char[] subst585 = {'O', 770, 777};
        decompositionTable.put((char) 7892, subst585);
        char[] subst586 = {'o', 770, 777};
        decompositionTable.put((char) 7893, subst586);
        char[] subst587 = {'O', 770, 771};
        decompositionTable.put((char) 7894, subst587);
        char[] subst588 = {'o', 770, 771};
        decompositionTable.put((char) 7895, subst588);
        char[] subst589 = {'O', 803, 770};
        decompositionTable.put((char) 7896, subst589);
        char[] subst590 = {'o', 803, 770};
        decompositionTable.put((char) 7897, subst590);
        char[] subst591 = {'O', 795, 769};
        decompositionTable.put((char) 7898, subst591);
        char[] subst592 = {'o', 795, 769};
        decompositionTable.put((char) 7899, subst592);
        char[] subst593 = {'O', 795, 768};
        decompositionTable.put((char) 7900, subst593);
        char[] subst594 = {'o', 795, 768};
        decompositionTable.put((char) 7901, subst594);
        char[] subst595 = {'O', 795, 777};
        decompositionTable.put((char) 7902, subst595);
        char[] subst596 = {'o', 795, 777};
        decompositionTable.put((char) 7903, subst596);
        char[] subst597 = {'O', 795, 771};
        decompositionTable.put((char) 7904, subst597);
        char[] subst598 = {'o', 795, 771};
        decompositionTable.put((char) 7905, subst598);
        char[] subst599 = {'O', 795, 803};
        decompositionTable.put((char) 7906, subst599);
        char[] subst600 = {'o', 795, 803};
        decompositionTable.put((char) 7907, subst600);
        char[] subst601 = {'U', 803};
        decompositionTable.put((char) 7908, subst601);
        char[] subst602 = {'u', 803};
        decompositionTable.put((char) 7909, subst602);
        char[] subst603 = {'U', 777};
        decompositionTable.put((char) 7910, subst603);
        char[] subst604 = {'u', 777};
        decompositionTable.put((char) 7911, subst604);
        char[] subst605 = {'U', 795, 769};
        decompositionTable.put((char) 7912, subst605);
        char[] subst606 = {'u', 795, 769};
        decompositionTable.put((char) 7913, subst606);
        char[] subst607 = {'U', 795, 768};
        decompositionTable.put((char) 7914, subst607);
        char[] subst608 = {'u', 795, 768};
        decompositionTable.put((char) 7915, subst608);
        char[] subst609 = {'U', 795, 777};
        decompositionTable.put((char) 7916, subst609);
        char[] subst610 = {'u', 795, 777};
        decompositionTable.put((char) 7917, subst610);
        char[] subst611 = {'U', 795, 771};
        decompositionTable.put((char) 7918, subst611);
        char[] subst612 = {'u', 795, 771};
        decompositionTable.put((char) 7919, subst612);
        char[] subst613 = {'U', 795, 803};
        decompositionTable.put((char) 7920, subst613);
        char[] subst614 = {'u', 795, 803};
        decompositionTable.put((char) 7921, subst614);
        char[] subst615 = {'Y', 768};
        decompositionTable.put((char) 7922, subst615);
        char[] subst616 = {'y', 768};
        decompositionTable.put((char) 7923, subst616);
        char[] subst617 = {'Y', 803};
        decompositionTable.put((char) 7924, subst617);
        char[] subst618 = {'y', 803};
        decompositionTable.put((char) 7925, subst618);
        char[] subst619 = {'Y', 777};
        decompositionTable.put((char) 7926, subst619);
        char[] subst620 = {'y', 777};
        decompositionTable.put((char) 7927, subst620);
        char[] subst621 = {'Y', 771};
        decompositionTable.put((char) 7928, subst621);
        char[] subst622 = {'y', 771};
        decompositionTable.put((char) 7929, subst622);
        char[] subst623 = {945, 787};
        decompositionTable.put((char) 7936, subst623);
        char[] subst624 = {945, 788};
        decompositionTable.put((char) 7937, subst624);
        char[] subst625 = {945, 787, 768};
        decompositionTable.put((char) 7938, subst625);
        char[] subst626 = {945, 788, 768};
        decompositionTable.put((char) 7939, subst626);
        char[] subst627 = {945, 787, 769};
        decompositionTable.put((char) 7940, subst627);
        char[] subst628 = {945, 788, 769};
        decompositionTable.put((char) 7941, subst628);
        char[] subst629 = {945, 787, 834};
        decompositionTable.put((char) 7942, subst629);
        char[] subst630 = {945, 788, 834};
        decompositionTable.put((char) 7943, subst630);
        char[] subst631 = {913, 787};
        decompositionTable.put((char) 7944, subst631);
        char[] subst632 = {913, 788};
        decompositionTable.put((char) 7945, subst632);
        char[] subst633 = {913, 787, 768};
        decompositionTable.put((char) 7946, subst633);
        char[] subst634 = {913, 788, 768};
        decompositionTable.put((char) 7947, subst634);
        char[] subst635 = {913, 787, 769};
        decompositionTable.put((char) 7948, subst635);
        char[] subst636 = {913, 788, 769};
        decompositionTable.put((char) 7949, subst636);
        char[] subst637 = {913, 787, 834};
        decompositionTable.put((char) 7950, subst637);
        char[] subst638 = {913, 788, 834};
        decompositionTable.put((char) 7951, subst638);
        char[] subst639 = {949, 787};
        decompositionTable.put((char) 7952, subst639);
        char[] subst640 = {949, 788};
        decompositionTable.put((char) 7953, subst640);
        char[] subst641 = {949, 787, 768};
        decompositionTable.put((char) 7954, subst641);
        char[] subst642 = {949, 788, 768};
        decompositionTable.put((char) 7955, subst642);
        char[] subst643 = {949, 787, 769};
        decompositionTable.put((char) 7956, subst643);
        char[] subst644 = {949, 788, 769};
        decompositionTable.put((char) 7957, subst644);
        char[] subst645 = {917, 787};
        decompositionTable.put((char) 7960, subst645);
        char[] subst646 = {917, 788};
        decompositionTable.put((char) 7961, subst646);
        char[] subst647 = {917, 787, 768};
        decompositionTable.put((char) 7962, subst647);
        char[] subst648 = {917, 788, 768};
        decompositionTable.put((char) 7963, subst648);
        char[] subst649 = {917, 787, 769};
        decompositionTable.put((char) 7964, subst649);
        char[] subst650 = {917, 788, 769};
        decompositionTable.put((char) 7965, subst650);
        char[] subst651 = {951, 787};
        decompositionTable.put((char) 7968, subst651);
        char[] subst652 = {951, 788};
        decompositionTable.put((char) 7969, subst652);
        char[] subst653 = {951, 787, 768};
        decompositionTable.put((char) 7970, subst653);
        char[] subst654 = {951, 788, 768};
        decompositionTable.put((char) 7971, subst654);
        char[] subst655 = {951, 787, 769};
        decompositionTable.put((char) 7972, subst655);
        char[] subst656 = {951, 788, 769};
        decompositionTable.put((char) 7973, subst656);
        char[] subst657 = {951, 787, 834};
        decompositionTable.put((char) 7974, subst657);
        char[] subst658 = {951, 788, 834};
        decompositionTable.put((char) 7975, subst658);
        char[] subst659 = {919, 787};
        decompositionTable.put((char) 7976, subst659);
        char[] subst660 = {919, 788};
        decompositionTable.put((char) 7977, subst660);
        char[] subst661 = {919, 787, 768};
        decompositionTable.put((char) 7978, subst661);
        char[] subst662 = {919, 788, 768};
        decompositionTable.put((char) 7979, subst662);
        char[] subst663 = {919, 787, 769};
        decompositionTable.put((char) 7980, subst663);
        char[] subst664 = {919, 788, 769};
        decompositionTable.put((char) 7981, subst664);
        char[] subst665 = {919, 787, 834};
        decompositionTable.put((char) 7982, subst665);
        char[] subst666 = {919, 788, 834};
        decompositionTable.put((char) 7983, subst666);
        char[] subst667 = {953, 787};
        decompositionTable.put((char) 7984, subst667);
        char[] subst668 = {953, 788};
        decompositionTable.put((char) 7985, subst668);
        char[] subst669 = {953, 787, 768};
        decompositionTable.put((char) 7986, subst669);
        char[] subst670 = {953, 788, 768};
        decompositionTable.put((char) 7987, subst670);
        char[] subst671 = {953, 787, 769};
        decompositionTable.put((char) 7988, subst671);
        char[] subst672 = {953, 788, 769};
        decompositionTable.put((char) 7989, subst672);
        char[] subst673 = {953, 787, 834};
        decompositionTable.put((char) 7990, subst673);
        char[] subst674 = {953, 788, 834};
        decompositionTable.put((char) 7991, subst674);
        char[] subst675 = {921, 787};
        decompositionTable.put((char) 7992, subst675);
        char[] subst676 = {921, 788};
        decompositionTable.put((char) 7993, subst676);
        char[] subst677 = {921, 787, 768};
        decompositionTable.put((char) 7994, subst677);
        char[] subst678 = {921, 788, 768};
        decompositionTable.put((char) 7995, subst678);
        char[] subst679 = {921, 787, 769};
        decompositionTable.put((char) 7996, subst679);
        char[] subst680 = {921, 788, 769};
        decompositionTable.put((char) 7997, subst680);
        char[] subst681 = {921, 787, 834};
        decompositionTable.put((char) 7998, subst681);
        char[] subst682 = {921, 788, 834};
        decompositionTable.put((char) 7999, subst682);
        char[] subst683 = {959, 787};
        decompositionTable.put((char) 8000, subst683);
        char[] subst684 = {959, 788};
        decompositionTable.put((char) 8001, subst684);
        char[] subst685 = {959, 787, 768};
        decompositionTable.put((char) 8002, subst685);
        char[] subst686 = {959, 788, 768};
        decompositionTable.put((char) 8003, subst686);
        char[] subst687 = {959, 787, 769};
        decompositionTable.put((char) 8004, subst687);
        char[] subst688 = {959, 788, 769};
        decompositionTable.put((char) 8005, subst688);
        char[] subst689 = {927, 787};
        decompositionTable.put((char) 8008, subst689);
        char[] subst690 = {927, 788};
        decompositionTable.put((char) 8009, subst690);
        char[] subst691 = {927, 787, 768};
        decompositionTable.put((char) 8010, subst691);
        char[] subst692 = {927, 788, 768};
        decompositionTable.put((char) 8011, subst692);
        char[] subst693 = {927, 787, 769};
        decompositionTable.put((char) 8012, subst693);
        char[] subst694 = {927, 788, 769};
        decompositionTable.put((char) 8013, subst694);
        char[] subst695 = {965, 787};
        decompositionTable.put((char) 8016, subst695);
        char[] subst696 = {965, 788};
        decompositionTable.put((char) 8017, subst696);
        char[] subst697 = {965, 787, 768};
        decompositionTable.put((char) 8018, subst697);
        char[] subst698 = {965, 788, 768};
        decompositionTable.put((char) 8019, subst698);
        char[] subst699 = {965, 787, 769};
        decompositionTable.put((char) 8020, subst699);
        char[] subst700 = {965, 788, 769};
        decompositionTable.put((char) 8021, subst700);
        char[] subst701 = {965, 787, 834};
        decompositionTable.put((char) 8022, subst701);
        char[] subst702 = {965, 788, 834};
        decompositionTable.put((char) 8023, subst702);
        char[] subst703 = {933, 788};
        decompositionTable.put((char) 8025, subst703);
        char[] subst704 = {933, 788, 768};
        decompositionTable.put((char) 8027, subst704);
        char[] subst705 = {933, 788, 769};
        decompositionTable.put((char) 8029, subst705);
        char[] subst706 = {933, 788, 834};
        decompositionTable.put((char) 8031, subst706);
        char[] subst707 = {969, 787};
        decompositionTable.put((char) 8032, subst707);
        char[] subst708 = {969, 788};
        decompositionTable.put((char) 8033, subst708);
        char[] subst709 = {969, 787, 768};
        decompositionTable.put((char) 8034, subst709);
        char[] subst710 = {969, 788, 768};
        decompositionTable.put((char) 8035, subst710);
        char[] subst711 = {969, 787, 769};
        decompositionTable.put((char) 8036, subst711);
        char[] subst712 = {969, 788, 769};
        decompositionTable.put((char) 8037, subst712);
        char[] subst713 = {969, 787, 834};
        decompositionTable.put((char) 8038, subst713);
        char[] subst714 = {969, 788, 834};
        decompositionTable.put((char) 8039, subst714);
        char[] subst715 = {937, 787};
        decompositionTable.put((char) 8040, subst715);
        char[] subst716 = {937, 788};
        decompositionTable.put((char) 8041, subst716);
        char[] subst717 = {937, 787, 768};
        decompositionTable.put((char) 8042, subst717);
        char[] subst718 = {937, 788, 768};
        decompositionTable.put((char) 8043, subst718);
        char[] subst719 = {937, 787, 769};
        decompositionTable.put((char) 8044, subst719);
        char[] subst720 = {937, 788, 769};
        decompositionTable.put((char) 8045, subst720);
        char[] subst721 = {937, 787, 834};
        decompositionTable.put((char) 8046, subst721);
        char[] subst722 = {937, 788, 834};
        decompositionTable.put((char) 8047, subst722);
        char[] subst723 = {945, 768};
        decompositionTable.put((char) 8048, subst723);
        char[] subst724 = {945, 769};
        decompositionTable.put((char) 8049, subst724);
        char[] subst725 = {949, 768};
        decompositionTable.put((char) 8050, subst725);
        char[] subst726 = {949, 769};
        decompositionTable.put((char) 8051, subst726);
        char[] subst727 = {951, 768};
        decompositionTable.put((char) 8052, subst727);
        char[] subst728 = {951, 769};
        decompositionTable.put((char) 8053, subst728);
        char[] subst729 = {953, 768};
        decompositionTable.put((char) 8054, subst729);
        char[] subst730 = {953, 769};
        decompositionTable.put((char) 8055, subst730);
        char[] subst731 = {959, 768};
        decompositionTable.put((char) 8056, subst731);
        char[] subst732 = {959, 769};
        decompositionTable.put((char) 8057, subst732);
        char[] subst733 = {965, 768};
        decompositionTable.put((char) 8058, subst733);
        char[] subst734 = {965, 769};
        decompositionTable.put((char) 8059, subst734);
        char[] subst735 = {969, 768};
        decompositionTable.put((char) 8060, subst735);
        char[] subst736 = {969, 769};
        decompositionTable.put((char) 8061, subst736);
        char[] subst737 = {945, 837, 787};
        decompositionTable.put((char) 8064, subst737);
        char[] subst738 = {945, 837, 788};
        decompositionTable.put((char) 8065, subst738);
        char[] subst739 = {945, 837, 787, 768};
        decompositionTable.put((char) 8066, subst739);
        char[] subst740 = {945, 837, 788, 768};
        decompositionTable.put((char) 8067, subst740);
        char[] subst741 = {945, 837, 787, 769};
        decompositionTable.put((char) 8068, subst741);
        char[] subst742 = {945, 837, 788, 769};
        decompositionTable.put((char) 8069, subst742);
        char[] subst743 = {945, 837, 787, 834};
        decompositionTable.put((char) 8070, subst743);
        char[] subst744 = {945, 837, 788, 834};
        decompositionTable.put((char) 8071, subst744);
        char[] subst745 = {913, 837, 787};
        decompositionTable.put((char) 8072, subst745);
        char[] subst746 = {913, 837, 788};
        decompositionTable.put((char) 8073, subst746);
        char[] subst747 = {913, 837, 787, 768};
        decompositionTable.put((char) 8074, subst747);
        char[] subst748 = {913, 837, 788, 768};
        decompositionTable.put((char) 8075, subst748);
        char[] subst749 = {913, 837, 787, 769};
        decompositionTable.put((char) 8076, subst749);
        char[] subst750 = {913, 837, 788, 769};
        decompositionTable.put((char) 8077, subst750);
        char[] subst751 = {913, 837, 787, 834};
        decompositionTable.put((char) 8078, subst751);
        char[] subst752 = {913, 837, 788, 834};
        decompositionTable.put((char) 8079, subst752);
        char[] subst753 = {951, 837, 787};
        decompositionTable.put((char) 8080, subst753);
        char[] subst754 = {951, 837, 788};
        decompositionTable.put((char) 8081, subst754);
        char[] subst755 = {951, 837, 787, 768};
        decompositionTable.put((char) 8082, subst755);
        char[] subst756 = {951, 837, 788, 768};
        decompositionTable.put((char) 8083, subst756);
        char[] subst757 = {951, 837, 787, 769};
        decompositionTable.put((char) 8084, subst757);
        char[] subst758 = {951, 837, 788, 769};
        decompositionTable.put((char) 8085, subst758);
        char[] subst759 = {951, 837, 787, 834};
        decompositionTable.put((char) 8086, subst759);
        char[] subst760 = {951, 837, 788, 834};
        decompositionTable.put((char) 8087, subst760);
        char[] subst761 = {919, 837, 787};
        decompositionTable.put((char) 8088, subst761);
        char[] subst762 = {919, 837, 788};
        decompositionTable.put((char) 8089, subst762);
        char[] subst763 = {919, 837, 787, 768};
        decompositionTable.put((char) 8090, subst763);
        char[] subst764 = {919, 837, 788, 768};
        decompositionTable.put((char) 8091, subst764);
        char[] subst765 = {919, 837, 787, 769};
        decompositionTable.put((char) 8092, subst765);
        char[] subst766 = {919, 837, 788, 769};
        decompositionTable.put((char) 8093, subst766);
        char[] subst767 = {919, 837, 787, 834};
        decompositionTable.put((char) 8094, subst767);
        char[] subst768 = {919, 837, 788, 834};
        decompositionTable.put((char) 8095, subst768);
        char[] subst769 = {969, 837, 787};
        decompositionTable.put((char) 8096, subst769);
        char[] subst770 = {969, 837, 788};
        decompositionTable.put((char) 8097, subst770);
        char[] subst771 = {969, 837, 787, 768};
        decompositionTable.put((char) 8098, subst771);
        char[] subst772 = {969, 837, 788, 768};
        decompositionTable.put((char) 8099, subst772);
        char[] subst773 = {969, 837, 787, 769};
        decompositionTable.put((char) 8100, subst773);
        char[] subst774 = {969, 837, 788, 769};
        decompositionTable.put((char) 8101, subst774);
        char[] subst775 = {969, 837, 787, 834};
        decompositionTable.put((char) 8102, subst775);
        char[] subst776 = {969, 837, 788, 834};
        decompositionTable.put((char) 8103, subst776);
        char[] subst777 = {937, 837, 787};
        decompositionTable.put((char) 8104, subst777);
        char[] subst778 = {937, 837, 788};
        decompositionTable.put((char) 8105, subst778);
        char[] subst779 = {937, 837, 787, 768};
        decompositionTable.put((char) 8106, subst779);
        char[] subst780 = {937, 837, 788, 768};
        decompositionTable.put((char) 8107, subst780);
        char[] subst781 = {937, 837, 787, 769};
        decompositionTable.put((char) 8108, subst781);
        char[] subst782 = {937, 837, 788, 769};
        decompositionTable.put((char) 8109, subst782);
        char[] subst783 = {937, 837, 787, 834};
        decompositionTable.put((char) 8110, subst783);
        char[] subst784 = {937, 837, 788, 834};
        decompositionTable.put((char) 8111, subst784);
        char[] subst785 = {945, 774};
        decompositionTable.put((char) 8112, subst785);
        char[] subst786 = {945, 772};
        decompositionTable.put((char) 8113, subst786);
        char[] subst787 = {945, 837, 768};
        decompositionTable.put((char) 8114, subst787);
        char[] subst788 = {945, 837};
        decompositionTable.put((char) 8115, subst788);
        char[] subst789 = {945, 837, 769};
        decompositionTable.put((char) 8116, subst789);
        char[] subst790 = {945, 834};
        decompositionTable.put((char) 8118, subst790);
        char[] subst791 = {945, 837, 834};
        decompositionTable.put((char) 8119, subst791);
        char[] subst792 = {913, 774};
        decompositionTable.put((char) 8120, subst792);
        char[] subst793 = {913, 772};
        decompositionTable.put((char) 8121, subst793);
        char[] subst794 = {913, 768};
        decompositionTable.put((char) 8122, subst794);
        char[] subst795 = {913, 769};
        decompositionTable.put((char) 8123, subst795);
        char[] subst796 = {913, 837};
        decompositionTable.put((char) 8124, subst796);
        char[] subst797 = {953};
        decompositionTable.put((char) 8126, subst797);
        char[] subst798 = {168, 834};
        decompositionTable.put((char) 8129, subst798);
        char[] subst799 = {951, 837, 768};
        decompositionTable.put((char) 8130, subst799);
        char[] subst800 = {951, 837};
        decompositionTable.put((char) 8131, subst800);
        char[] subst801 = {951, 837, 769};
        decompositionTable.put((char) 8132, subst801);
        char[] subst802 = {951, 834};
        decompositionTable.put((char) 8134, subst802);
        char[] subst803 = {951, 837, 834};
        decompositionTable.put((char) 8135, subst803);
        char[] subst804 = {917, 768};
        decompositionTable.put((char) 8136, subst804);
        char[] subst805 = {917, 769};
        decompositionTable.put((char) 8137, subst805);
        char[] subst806 = {919, 768};
        decompositionTable.put((char) 8138, subst806);
        char[] subst807 = {919, 769};
        decompositionTable.put((char) 8139, subst807);
        char[] subst808 = {919, 837};
        decompositionTable.put((char) 8140, subst808);
        char[] subst809 = {8127, 768};
        decompositionTable.put((char) 8141, subst809);
        char[] subst810 = {8127, 769};
        decompositionTable.put((char) 8142, subst810);
        char[] subst811 = {8127, 834};
        decompositionTable.put((char) 8143, subst811);
        char[] subst812 = {953, 774};
        decompositionTable.put((char) 8144, subst812);
        char[] subst813 = {953, 772};
        decompositionTable.put((char) 8145, subst813);
        char[] subst814 = {953, 776, 768};
        decompositionTable.put((char) 8146, subst814);
        char[] subst815 = {953, 776, 769};
        decompositionTable.put((char) 8147, subst815);
        char[] subst816 = {953, 834};
        decompositionTable.put((char) 8150, subst816);
        char[] subst817 = {953, 776, 834};
        decompositionTable.put((char) 8151, subst817);
        char[] subst818 = {921, 774};
        decompositionTable.put((char) 8152, subst818);
        char[] subst819 = {921, 772};
        decompositionTable.put((char) 8153, subst819);
        char[] subst820 = {921, 768};
        decompositionTable.put((char) 8154, subst820);
        char[] subst821 = {921, 769};
        decompositionTable.put((char) 8155, subst821);
        char[] subst822 = {8190, 768};
        decompositionTable.put((char) 8157, subst822);
        char[] subst823 = {8190, 769};
        decompositionTable.put((char) 8158, subst823);
        char[] subst824 = {8190, 834};
        decompositionTable.put((char) 8159, subst824);
        char[] subst825 = {965, 774};
        decompositionTable.put((char) 8160, subst825);
        char[] subst826 = {965, 772};
        decompositionTable.put((char) 8161, subst826);
        char[] subst827 = {965, 776, 768};
        decompositionTable.put((char) 8162, subst827);
        char[] subst828 = {965, 776, 769};
        decompositionTable.put((char) 8163, subst828);
        char[] subst829 = {961, 787};
        decompositionTable.put((char) 8164, subst829);
        char[] subst830 = {961, 788};
        decompositionTable.put((char) 8165, subst830);
        char[] subst831 = {965, 834};
        decompositionTable.put((char) 8166, subst831);
        char[] subst832 = {965, 776, 834};
        decompositionTable.put((char) 8167, subst832);
        char[] subst833 = {933, 774};
        decompositionTable.put((char) 8168, subst833);
        char[] subst834 = {933, 772};
        decompositionTable.put((char) 8169, subst834);
        char[] subst835 = {933, 768};
        decompositionTable.put((char) 8170, subst835);
        char[] subst836 = {933, 769};
        decompositionTable.put((char) 8171, subst836);
        char[] subst837 = {929, 788};
        decompositionTable.put((char) 8172, subst837);
        char[] subst838 = {168, 768};
        decompositionTable.put((char) 8173, subst838);
        char[] subst839 = {168, 769};
        decompositionTable.put((char) 8174, subst839);
        char[] subst840 = {'`'};
        decompositionTable.put((char) 8175, subst840);
        char[] subst841 = {969, 837, 768};
        decompositionTable.put((char) 8178, subst841);
        char[] subst842 = {969, 837};
        decompositionTable.put((char) 8179, subst842);
        char[] subst843 = {959, 837, 769};
        decompositionTable.put((char) 8180, subst843);
        char[] subst844 = {969, 834};
        decompositionTable.put((char) 8182, subst844);
        char[] subst845 = {969, 837, 834};
        decompositionTable.put((char) 8183, subst845);
        char[] subst846 = {927, 768};
        decompositionTable.put((char) 8184, subst846);
        char[] subst847 = {927, 769};
        decompositionTable.put((char) 8185, subst847);
        char[] subst848 = {937, 768};
        decompositionTable.put((char) 8186, subst848);
        char[] subst849 = {937, 769};
        decompositionTable.put((char) 8187, subst849);
        char[] subst850 = {937, 837};
        decompositionTable.put((char) 8188, subst850);
        char[] subst851 = {180};
        decompositionTable.put((char) 8189, subst851);
        char[] subst852 = {12363, 12441};
        decompositionTable.put((char) 12364, subst852);
        char[] subst853 = {12365, 12441};
        decompositionTable.put((char) 12366, subst853);
        char[] subst854 = {12367, 12441};
        decompositionTable.put((char) 12368, subst854);
        char[] subst855 = {12369, 12441};
        decompositionTable.put((char) 12370, subst855);
        char[] subst856 = {12371, 12441};
        decompositionTable.put((char) 12372, subst856);
        char[] subst857 = {12373, 12441};
        decompositionTable.put((char) 12374, subst857);
        char[] subst858 = {12375, 12441};
        decompositionTable.put((char) 12376, subst858);
        char[] subst859 = {12377, 12441};
        decompositionTable.put((char) 12378, subst859);
        char[] subst860 = {12379, 12441};
        decompositionTable.put((char) 12380, subst860);
        char[] subst861 = {12381, 12441};
        decompositionTable.put((char) 12382, subst861);
        char[] subst862 = {12383, 12441};
        decompositionTable.put((char) 12384, subst862);
        char[] subst863 = {12385, 12441};
        decompositionTable.put((char) 12386, subst863);
        char[] subst864 = {12388, 12441};
        decompositionTable.put((char) 12389, subst864);
        char[] subst865 = {12390, 12441};
        decompositionTable.put((char) 12391, subst865);
        char[] subst866 = {12392, 12441};
        decompositionTable.put((char) 12393, subst866);
        char[] subst867 = {12399, 12441};
        decompositionTable.put((char) 12400, subst867);
        char[] subst868 = {12399, 12442};
        decompositionTable.put((char) 12401, subst868);
        char[] subst869 = {12402, 12441};
        decompositionTable.put((char) 12403, subst869);
        char[] subst870 = {12402, 12442};
        decompositionTable.put((char) 12404, subst870);
        char[] subst871 = {12405, 12441};
        decompositionTable.put((char) 12406, subst871);
        char[] subst872 = {12405, 12442};
        decompositionTable.put((char) 12407, subst872);
        char[] subst873 = {12408, 12441};
        decompositionTable.put((char) 12409, subst873);
        char[] subst874 = {12408, 12442};
        decompositionTable.put((char) 12410, subst874);
        char[] subst875 = {12411, 12441};
        decompositionTable.put((char) 12412, subst875);
        char[] subst876 = {12411, 12442};
        decompositionTable.put((char) 12413, subst876);
        char[] subst877 = {12358, 12441};
        decompositionTable.put((char) 12436, subst877);
        char[] subst878 = {12445, 12441};
        decompositionTable.put((char) 12446, subst878);
        char[] subst879 = {12459, 12441};
        decompositionTable.put((char) 12460, subst879);
        char[] subst880 = {12461, 12441};
        decompositionTable.put((char) 12462, subst880);
        char[] subst881 = {12463, 12441};
        decompositionTable.put((char) 12464, subst881);
        char[] subst882 = {12465, 12441};
        decompositionTable.put((char) 12466, subst882);
        char[] subst883 = {12467, 12441};
        decompositionTable.put((char) 12468, subst883);
        char[] subst884 = {12469, 12441};
        decompositionTable.put((char) 12470, subst884);
        char[] subst885 = {12471, 12441};
        decompositionTable.put((char) 12472, subst885);
        char[] subst886 = {12473, 12441};
        decompositionTable.put((char) 12474, subst886);
        char[] subst887 = {12475, 12441};
        decompositionTable.put((char) 12476, subst887);
        char[] subst888 = {12477, 12441};
        decompositionTable.put((char) 12478, subst888);
        char[] subst889 = {12479, 12441};
        decompositionTable.put((char) 12480, subst889);
        char[] subst890 = {12481, 12441};
        decompositionTable.put((char) 12482, subst890);
        char[] subst891 = {12484, 12441};
        decompositionTable.put((char) 12485, subst891);
        char[] subst892 = {12486, 12441};
        decompositionTable.put((char) 12487, subst892);
        char[] subst893 = {12488, 12441};
        decompositionTable.put((char) 12489, subst893);
        char[] subst894 = {12495, 12441};
        decompositionTable.put((char) 12496, subst894);
        char[] subst895 = {12495, 12442};
        decompositionTable.put((char) 12497, subst895);
        char[] subst896 = {12498, 12441};
        decompositionTable.put((char) 12499, subst896);
        char[] subst897 = {12498, 12442};
        decompositionTable.put((char) 12500, subst897);
        char[] subst898 = {12501, 12441};
        decompositionTable.put((char) 12502, subst898);
        char[] subst899 = {12501, 12442};
        decompositionTable.put((char) 12503, subst899);
        char[] subst900 = {12504, 12441};
        decompositionTable.put((char) 12505, subst900);
        char[] subst901 = {12504, 12442};
        decompositionTable.put((char) 12506, subst901);
        char[] subst902 = {12507, 12441};
        decompositionTable.put((char) 12508, subst902);
        char[] subst903 = {12507, 12442};
        decompositionTable.put((char) 12509, subst903);
        char[] subst904 = {12454, 12441};
        decompositionTable.put((char) 12532, subst904);
        char[] subst905 = {12527, 12441};
        decompositionTable.put((char) 12535, subst905);
        char[] subst906 = {12528, 12441};
        decompositionTable.put((char) 12536, subst906);
        char[] subst907 = {12529, 12441};
        decompositionTable.put((char) 12537, subst907);
        char[] subst908 = {12530, 12441};
        decompositionTable.put((char) 12538, subst908);
        char[] subst909 = {12541, 12441};
        decompositionTable.put((char) 12542, subst909);
        char[] subst910 = {1522, 1463};
        decompositionTable.put((char) 64287, subst910);
        char[] subst911 = {1513, 1473};
        decompositionTable.put((char) 64298, subst911);
        char[] subst912 = {1513, 1474};
        decompositionTable.put((char) 64299, subst912);
        char[] subst913 = {1513, 1468, 1473};
        decompositionTable.put((char) 64300, subst913);
        char[] subst914 = {1513, 1468, 1474};
        decompositionTable.put((char) 64301, subst914);
        char[] subst915 = {1488, 1463};
        decompositionTable.put((char) 64302, subst915);
        char[] subst916 = {1488, 1464};
        decompositionTable.put((char) 64303, subst916);
        char[] subst917 = {1488, 1468};
        decompositionTable.put((char) 64304, subst917);
        char[] subst918 = {1489, 1468};
        decompositionTable.put((char) 64305, subst918);
        char[] subst919 = {1490, 1468};
        decompositionTable.put((char) 64306, subst919);
        char[] subst920 = {1491, 1468};
        decompositionTable.put((char) 64307, subst920);
        char[] subst921 = {1492, 1468};
        decompositionTable.put((char) 64308, subst921);
        char[] subst922 = {1493, 1468};
        decompositionTable.put((char) 64309, subst922);
        char[] subst923 = {1494, 1468};
        decompositionTable.put((char) 64310, subst923);
        char[] subst924 = {1496, 1468};
        decompositionTable.put((char) 64312, subst924);
        char[] subst925 = {1497, 1468};
        decompositionTable.put((char) 64313, subst925);
        char[] subst926 = {1498, 1468};
        decompositionTable.put((char) 64314, subst926);
        char[] subst927 = {1499, 1468};
        decompositionTable.put((char) 64315, subst927);
        char[] subst928 = {1500, 1468};
        decompositionTable.put((char) 64316, subst928);
        char[] subst929 = {1502, 1468};
        decompositionTable.put((char) 64318, subst929);
        char[] subst930 = {1504, 1468};
        decompositionTable.put((char) 64320, subst930);
        char[] subst931 = {1505, 1468};
        decompositionTable.put((char) 64321, subst931);
        char[] subst932 = {1507, 1468};
        decompositionTable.put((char) 64323, subst932);
        char[] subst933 = {1508, 1468};
        decompositionTable.put((char) 64324, subst933);
        char[] subst934 = {1510, 1468};
        decompositionTable.put((char) 64326, subst934);
        char[] subst935 = {1511, 1468};
        decompositionTable.put((char) 64327, subst935);
        char[] subst936 = {1512, 1468};
        decompositionTable.put((char) 64328, subst936);
        char[] subst937 = {1513, 1468};
        decompositionTable.put((char) 64329, subst937);
        char[] subst938 = {1514, 1468};
        decompositionTable.put((char) 64330, subst938);
        char[] subst939 = {1493, 1465};
        decompositionTable.put((char) 64331, subst939);
        char[] subst940 = {1489, 1471};
        decompositionTable.put((char) 64332, subst940);
        char[] subst941 = {1499, 1471};
        decompositionTable.put((char) 64333, subst941);
        char[] subst942 = {1508, 1471};
        decompositionTable.put((char) 64334, subst942);
    }
}
